name: Generate and Deploy Mind Map

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-mindmap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Generate mind map
        run: python generate_mindmap.py

      - name: Configure GPG
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --edit-key <your-email@example.com> trust quit

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_KEY_ID: <your-key-id>
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global user.signingkey $GPG_KEY_ID
          git config --global commit.gpgSign true
          git add mindmap.mmd
          git commit -m 'Generate mind map'
          git push origin main

  deploy:
    needs: generate-mindmap
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Build
        run: yarn build

      - name: List build directory contents
        run: ls -la build

      - name: Setup Pages
        uses: actions/configure-pages@v1

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      - name: Set deployment URL
        run: echo "page_url=${{ steps.deployment.outputs.page_url }}" >> $GITHUB_ENV
